{
  "compilerOptions": {
    "experimentalDecorators": true,
    /* Language and Environment */
    "target": "ES5",                                     /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["ESNext"],                                   /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    /* Modules */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "rootDir": "./src",                                  /* Specify the root folder within your source files. */
    "baseUrl": "./src",                                  /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@typeFiles/*": [
        "types/*"
      ],
      "@routes/*": [
        "routes/*"
      ],
      "@models/*": [
        "models/*"
      ],
      "@logger/*": [
        "logger/*"
      ]
    },                                                   /* Specify a set of entries that re-map imports to additional lookup locations. */
    "typeRoots": [
      "node_modules/@types",
      "./src/types/**/*"
    ],                                                   /* Specify multiple folders that act like './node_modules/@types'. */
    /* JavaScript Support */
    "allowJs": false,                                    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    /* Emit */
    "outDir": "./build",                                 /* Specify an output folder for all emitted files. */
    "removeComments": false,                             /* Disable emitting comments. */
    /* Interop Constraints */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictFunctionTypes": true,                         /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,                         /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "useUnknownInCatchVariables": true,                  /* Default catch clause variables as 'unknown' instead of 'any'. */
    "noUnusedLocals": true,                              /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,                  /* Enable error reporting for fallthrough cases in switch statements. */
    "allowUnusedLabels": true,                           /* Disable error reporting for unused labels. */
    "allowUnreachableCode": true,                        /* Disable error reporting for unreachable code. */
    /* Completeness */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules"
  ], 
}
